{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClicked","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","initialSate","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ced5d895.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types'\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\")\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        history.push('/dashboard')\r\n    }\r\n};\r\n\r\nexport const deleteProject = (id) => async dispatch => {\r\n    if (window.confirm(\"Are you sure? This will delete the project and all the data related to it\")) {\r\n        try {\r\n            await axios.delete(`/api/project/${id}`)\r\n            dispatch({\r\n                type: DELETE_PROJECT,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n        }\r\n    }\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\n\r\nexport const GET_PROJECTS = \"GET_PROJECTS\"\r\n\r\nexport const GET_PROJECT = 'GET_PROJECT'\r\n\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT'\r\n\r\n// Types for Backlog actions\r\n\r\nexport const GET_BACKLOG = 'GET_BACKLOG'\r\n\r\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK'\r\n\r\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK'\r\n\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from '../../actions/projectActions'\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteClicked = id => {\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { project } = this.props\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectBoard/${project.projectIdentifier}`} >\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClicked.bind(this, project.projectIdentifier)}                                    >\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n                    </Link>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateProjectButton;","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem'\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {projects} = this.props.project\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                            <CreateProjectButton />\r\n                            <br />\r\n                            <hr />\r\n                            {\r\n                                projects.map(project => (\r\n                                    <ProjectItem key={project.id} project={project}/>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;","import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport setJWTToken from '../securityUtils/setJWTToken'\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n\r\n        setJWTToken(token);\r\n\r\n        const decoded = jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n\r\n    localStorage.removeItem(\"jwtToken\");\r\n\r\n    setJWTToken(false);\r\n\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    render() {\r\n\r\n        const { validToken, user } = this.props.security\r\n\r\n        const userIsAuthenticated = (\r\n            < div className=\"collapse navbar-collapse\" id=\"mobile-nav\" >\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/dashboard\" className=\"nav-link \" >\r\n                            <i className=\"fas fa-user-circle mr-1\" /> {user.fullname}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/logout\" className=\"nav-link\" onClick={this.logout.bind(this)}>\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div >\r\n\r\n        );\r\n\r\n        const userIsNotAuthenticated = (\r\n            < div className=\"collapse navbar-collapse\" id=\"mobile-nav\" >\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/register\" className=\"nav-link \" >\r\n                            Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/login\" className=\"nav-link\" >\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div >\r\n\r\n        );\r\n\r\n        let headerLinks;\r\n\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated;\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\" >\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\" >\r\n                        Personal Project Management Tool\r\n            </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    {headerLinks}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport { createProject } from '../../actions/projectActions'\r\nimport classnames from 'classnames'\r\n\r\nclass AddProject extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n\r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n\r\n        this.props.createProject(newProject, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project Form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.projectName\r\n                                        })} placeholder=\"Project Name\"\r\n                                            name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.projectIdentifier\r\n                                        })} placeholder=\"Unique Project ID\"\r\n                                            name=\"projectIdentifier\" value={this.state.projectIdentifier} onChange={this.onChange} />\r\n                                        {errors.projectIdentifier && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })} placeholder=\"Project Description\"\r\n                                            name=\"description\" value={this.state.description} onChange={this.onChange}></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\" value={this.state.start_date} onChange={this.onChange} />\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\" value={this.state.end_date} onChange={this.onChange} />\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);","import {GET_ERRORS} from '../actions/types'\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state= initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\"\r\n\r\nconst initialSate = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function (state = initialSate, action) {\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(project =>\r\n                    project.projectIdentifier !== action.payload\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from '../actions/types'\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            }\r\n\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/types'\r\n\r\nconst initialSate = {\r\n    user: {},\r\n    validToken: false\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if (payload) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default function (state = initialSate, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    );\r\n} else {\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from '../../actions/projectActions'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n        const {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        } = nextProps.project\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n\r\n        this.props.createProject(updateProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.projectName\r\n                                    })} placeholder=\"Project Name\"\r\n                                        name=\"projectName\" value={this.state.projectName} onChange={this.onChange} />\r\n                                    {errors.projectName && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.projectIdentifier\r\n                                    })} placeholder=\"Unique Project ID\" name=\"projectIdentifier\"\r\n                                        value={this.state.projectIdentifier} disabled />\r\n                                    {errors.projectIdentifier && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.description\r\n                                    })} placeholder=\"Project Description\" name=\"description\"\r\n                                        value={this.state.description} onChange={this.onChange}></textarea>\r\n                                    {errors.description && (\r\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                    )}\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\"\r\n                                        value={this.state.start_date} onChange={this.onChange} />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\"\r\n                                        value={this.state.end_date} onChange={this.onChange} />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteProjectTask } from '../../../actions/backlogActions'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClicked(backlog_id, pt_id) {\r\n        this.props.deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { project_task } = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\"\r\n            priorityString = \"HIGH\"\r\n        }\r\n\r\n        if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\"\r\n            priorityString = \"MEDIUM\"\r\n        }\r\n\r\n        if (project_task.priority === 3) {\r\n            priorityClass = \"bg-info text-light\"\r\n            priorityString = \"LOW\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mb-1 bg-light\">\r\n\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                        View / Update\r\n                </Link>\r\n                    <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClicked.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\r\n                        Delete\r\n                </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask)\r\n","import axios from 'axios'\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from './types'\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if (window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone. Are you sure?`)) {\r\n        try {\r\n            await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n            dispatch({\r\n                type: DELETE_PROJECT_TASK,\r\n                payload: pt_id\r\n            });\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const { project_tasks_prop } = this.props\r\n\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n\r\n        let todoItems = []\r\n        let inProgressItems = []\r\n        let doneItems = []\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                todoItems.push(tasks[i]);\r\n            } else if (tasks[i].props.project_task.status === \"DONE\") {\r\n                doneItems.push(tasks[i]);\r\n            } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                inProgressItems.push(tasks[i]);\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            todoItems\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            inProgressItems\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            doneItems\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types'\r\nimport { getBacklog } from '../../actions/backlogActions'\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n\r\n        const { errors } = this.state\r\n        let BoardContent;\r\n\r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n            if (project_tasks.length < 1) {\r\n                if (errors.projectNotFound) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    );\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                            No Project Tasks on this board\r\n                        </div>\r\n                    );\r\n                }\r\n            } else {\r\n                return <Backlog project_tasks_prop={project_tasks} />\r\n\r\n            }\r\n        };\r\n\r\n        BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {BoardContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard)","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames'\r\nimport { addProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const { id } = this.props.match.params\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const newTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n        }\r\n\r\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id } = this.props.match.params;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                        </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\" value={this.state.summary} onChange={this.onChange} />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria} onChange={this.onChange}></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport classnames from 'classnames'\r\nimport { getProjectTask, updateProjectTask } from '../../../actions/backlogActions'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            create_At: \"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            })\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        })\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const updatedProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            create_At: this.state.create_At\r\n        }\r\n\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updatedProjectTask, this.props.history);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                        </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} + Project Task ID: {this.state.projectSequence} </p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                    })} name=\"summary\" placeholder=\"Project Task summary\" value={this.state.summary} onChange={this.onChange} />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\" value={this.state.acceptanceCriteria} onChange={this.onChange}></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\" value={this.state.dueDate} onChange={this.onChange} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"priority\" value={this.state.priority} onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                            </p>\r\n                                <hr />\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\" >\r\n                                    Sign Up\r\n                        </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                            </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from 'classnames'\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullname: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullname: this.state.fullname,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        }\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.fullname\r\n                                    })} placeholder=\"Full Name\" name=\"fullname\"\r\n                                        value={this.state.fullname} onChange={this.onChange} />\r\n                                    {errors.fullname && (\r\n                                        <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.username\r\n                                    })} placeholder=\"Email Address (Username)\"\r\n                                        name=\"username\" value={this.state.username} onChange={this.onChange} />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.password\r\n                                    })} placeholder=\"Password\"\r\n                                        name=\"password\" value={this.state.password} onChange={this.onChange} />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.confirmPassword\r\n                                    })} placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onChange} />\r\n                                    {errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../actions/securityActions';\r\nimport PropTypes from \"prop-types\"\r\nimport classnames from 'classnames'\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const LoginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        this.props.login(LoginRequest);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.username\r\n                                    })} placeholder=\"Email Address\"\r\n                                        name=\"username\" value={this.state.username} onChange={this.onChange} />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.password\r\n                                    })} placeholder=\"Password\"\r\n                                        name=\"password\" value={this.state.password} onChange={this.onChange} />\r\n                                    {errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    )}\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route {...otherProps} render={props => security.validToken === true ?\r\n        (<Component {...props} />) : (<Redirect to=\"/login\" />)\r\n    } />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\"\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000\n\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout())\n    window.location.href = \"/\";\n  }\n}\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={Landing} />\n\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}